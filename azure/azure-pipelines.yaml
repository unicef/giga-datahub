trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  kubernetesServiceConnection: Datahub-DEV-uni-apps-aks-dev-ictd-oi-datahub-dev-1684231863813
  kubernetesNamespace: ictd-oi-datahub-dev
  mysqlPass: $(MYSQL_PASS)
  neo4jPass: $(NEO4J_PASS)

steps:
- task: Kubernetes@1
  displayName: Create secret for MySQL password
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: create
    arguments: "secret generic mysql-secrets --from-literal=mysql-root-password=$(mysqlPass)"
    namespace: $(kubernetesNamespace)

- task: HelmDeploy@0
  displayName: 'UninstallDatahub Prerequisites'
  enabled: true
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: 'uninstall'
    arguments: 'prerequisites'
    namespace: $(kubernetesNamespace)

- task: Kubernetes@1
  displayName: Create secret for Neo4j password
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: create
    arguments: "secret generic neo4j-secrets --from-literal=neo4j-password=$(neo4jPass)"
    namespace: $(kubernetesNamespace)

- task: HelmDeploy@0
  displayName: 'Add Datahub Helm Repo'
  enabled: true
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: 'repo'
    arguments: 'add datahub https://helm.datahubproject.io/'
    namespace: $(kubernetesNamespace)

- task: HelmDeploy@0
  displayName: 'Add Deploy Datahub Prerequisites'
  enabled: true
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: 'install'
    chartType: Name
    chartName: datahub/datahub-prerequisites
    releaseName: prerequisites
    namespace: $(kubernetesNamespace)

- task: HelmDeploy@0
  displayName: Helm deploy Datahub
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
    command: 'install'
    chartType: Name
    chartName: datahub/datahub
    releaseName: datahub
    namespace: $(kubernetesNamespace)

#- task: Kubernetes@1
#  displayName: Set up Ingress
#  inputs:
#    connectionType: Kubernetes Service Connection
#    kubernetesServiceEndpoint: $(kubernetesServiceConnection)
#    command: apply
#    arguments: '-f azure/ingress.yaml'
#    namespace: $(kubernetesNamespace)
